{"ast":null,"code":"import { createRouter, createWebHistory } from 'vue-router';\nimport Home from '../pages/Home.vue';\nimport store from '@/store';\nconst routes = [{\n  path: '/',\n  name: 'home',\n  component: Home\n}, {\n  path: '/harut',\n  name: 'Harut',\n  component: () => import(\"../pages/Harut.vue\"),\n  beforeEnter: (to, from, next) => {\n    checkLogin(to, from, next);\n  }\n}];\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes,\n  // 맨 위로\n  scrollBehavior(to, from, savedPosition) {\n    // 기존 위치 존재하면 그 위치 반환\n    if (savedPosition) {\n      return savedPosition;\n    }\n    // 쿼리만 다를 때는 스크롤 업 안함\n    if (to.matched[0]?.path === from.matched[0]?.path && to.path !== '/') {\n      return;\n    }\n    if (to.path === from.path || to.path === '/') {\n      window.scrollTo({\n        top: 0,\n        behavior: 'smooth'\n      });\n      return;\n    }\n    window.scrollTo({\n      top: 0\n    });\n  }\n});\n\n// 페이지 변경시 로딩 시작\nrouter.beforeEach(() => {\n  store.commit('loading/startDelayLoading');\n  store.commit('header/close'); // 다른 페이지로 넘어갈 때 헤더 닫기(뒤로가기 때문)\n});\n// 페이지 변경 완료시 로딩 끝냄\nrouter.afterEach(() => {\n  store.commit('loading/finishLoading');\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","Home","store","routes","path","name","component","beforeEnter","to","from","next","checkLogin","router","history","process","env","BASE_URL","scrollBehavior","savedPosition","matched","window","scrollTo","top","behavior","beforeEach","commit","afterEach"],"sources":["/Users/hyunjungso/Documents/GitHub/portfolio.vue/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router'\nimport Home from '../pages/Home.vue'\nimport store from '@/store'\n\nconst routes = [\n  {\n    path: '/',\n    name: 'home',\n    component: Home,\n  },\n  {\n    path: '/harut',\n    name: 'Harut',\n  \tcomponent: () => import(\"../pages/Harut.vue\"),\n\t\tbeforeEnter: (to, from, next) => {\n\t\t\tcheckLogin(to, from, next);\n\t\t},\n  },\n]\n\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes,\n  // 맨 위로\n  scrollBehavior (to, from, savedPosition) {\n    // 기존 위치 존재하면 그 위치 반환\n    if(savedPosition){\n      return savedPosition;\n    }\n    // 쿼리만 다를 때는 스크롤 업 안함\n    if(to.matched[0]?.path===from.matched[0]?.path && to.path!=='/') {\n      return;\n    }\n    if(to.path===from.path || to.path==='/'){\n      window.scrollTo({top : 0, behavior : 'smooth'});\n      return;\n    }\n\n    window.scrollTo({top : 0})\n  }\n})\n\n// 페이지 변경시 로딩 시작\nrouter.beforeEach(() => {\n  store.commit('loading/startDelayLoading'); \n  store.commit('header/close'); // 다른 페이지로 넘어갈 때 헤더 닫기(뒤로가기 때문)\n})\n// 페이지 변경 완료시 로딩 끝냄\nrouter.afterEach(() => {\n  store.commit('loading/finishLoading');\n})\n\nexport default router\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;AAC3D,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,KAAK,MAAM,SAAS;AAE3B,MAAMC,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,GAAG;EACTC,IAAI,EAAE,MAAM;EACZC,SAAS,EAAEL;AACb,CAAC,EACD;EACEG,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,OAAO;EACdC,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,oBAAoB,CAAC;EAC9CC,WAAW,EAAEA,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;IAChCC,UAAU,CAACH,EAAE,EAAEC,IAAI,EAAEC,IAAI,CAAC;EAC3B;AACA,CAAC,CACF;AAED,MAAME,MAAM,GAAGb,YAAY,CAAC;EAC1Bc,OAAO,EAAEb,gBAAgB,CAACc,OAAO,CAACC,GAAG,CAACC,QAAQ,CAAC;EAC/Cb,MAAM;EACN;EACAc,cAAcA,CAAET,EAAE,EAAEC,IAAI,EAAES,aAAa,EAAE;IACvC;IACA,IAAGA,aAAa,EAAC;MACf,OAAOA,aAAa;IACtB;IACA;IACA,IAAGV,EAAE,CAACW,OAAO,CAAC,CAAC,CAAC,EAAEf,IAAI,KAAGK,IAAI,CAACU,OAAO,CAAC,CAAC,CAAC,EAAEf,IAAI,IAAII,EAAE,CAACJ,IAAI,KAAG,GAAG,EAAE;MAC/D;IACF;IACA,IAAGI,EAAE,CAACJ,IAAI,KAAGK,IAAI,CAACL,IAAI,IAAII,EAAE,CAACJ,IAAI,KAAG,GAAG,EAAC;MACtCgB,MAAM,CAACC,QAAQ,CAAC;QAACC,GAAG,EAAG,CAAC;QAAEC,QAAQ,EAAG;MAAQ,CAAC,CAAC;MAC/C;IACF;IAEAH,MAAM,CAACC,QAAQ,CAAC;MAACC,GAAG,EAAG;IAAC,CAAC,CAAC;EAC5B;AACF,CAAC,CAAC;;AAEF;AACAV,MAAM,CAACY,UAAU,CAAC,MAAM;EACtBtB,KAAK,CAACuB,MAAM,CAAC,2BAA2B,CAAC;EACzCvB,KAAK,CAACuB,MAAM,CAAC,cAAc,CAAC,CAAC,CAAC;AAChC,CAAC,CAAC;AACF;AACAb,MAAM,CAACc,SAAS,CAAC,MAAM;EACrBxB,KAAK,CAACuB,MAAM,CAAC,uBAAuB,CAAC;AACvC,CAAC,CAAC;AAEF,eAAeb,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}